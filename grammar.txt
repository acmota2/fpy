empty           :

scope           :

code            : BEGIN func END
                | BEGIN code func END

func            : FDEF ID LPAR scope RPAR LBRACE body RBRACE
                | FDEF ID LPAR scope args RPAR LBRACE body RBRACE

args            : lvar
                | args COMMA lvar

lvar            : var
                | llist
                | ltuple

llist           : LBRACKET RBRACKET
                | LBRACKET llist_cont RBRACKET
llist_cont      : lvar  
                | llist_cont COMMA lvar
                | lvar LISTER llist

ltuple          : LPAR RPAR
                | LPAR ltuple_cont COMMA lvar RPAR
ltuple_cont     : lvar
                | ltuple_cont COMMA lvar

body            : exp
                | statement body

statement       : assign
                | reassign
assign          : lvar ASSIGN exp
reassign        : lvar REASSIGN exp

exp             : rvar
                | eval
                | aritm
                | cond
                | lambda

lambda          : LAMBDA LBRACE exp RBRACE
                | LAMBDA args LBRACE exp RBRACE

cond            : COND LBRACE condition RBRACE
                | IF eval THEN exp ELSE exp
condition       : condition_cont ELSE COLON exp
condition_cont  : evalexp
                | evalexp COMMA condition_cont

evalexp         : eval COLON exp

eval            : ID
                | exp 'cond_op' eval
                | LPAR eval RPAR

aritm           : ID
                | NUM
                | ID 'aritm_op' aritm
                | NUM 'aritm_op' aritm
                | LPAR aritm RPAR

rvar            : var
                | rlist
                | rtuple
                | func_call

rlist           : LBRACKET RBRACKET
                | LBRACKET rlist_cont RBRACKET
rlist_cont      : exp
                | rlist_term COMMA exp
                | exp LISTER rlist

rtuple          : LPAR RPAR
                | LPAR rtuple_cont COMMA exp RPAR
rtuple_cont     : exp
                | rtuple_cont COMMA exp

func_call       : ID LPAR func_call_cont
func_call_cont  : RPAR
                | exp COMMA func_call_cont

var             : ID
                | NUM
                | STRING
                | CHAR
